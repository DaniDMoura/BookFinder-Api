
services:
  db:
    image: postgres:13
    hostname: db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  api1:
    build: .
    restart: always
    hostname: api1
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "uv run alembic upgrade head && uv run uvicorn --host 0.0.0.0 --port 8000 api.main:app"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - ALGORITHM=${ALGORITHM}
      - SECRET_KEY=${SECRET_KEY}
      - GOOGLE_BOOKS_API_KEY=${GOOGLE_BOOKS_API_KEY}
      - TOKEN_EXPIRE_MINUTES=${TOKEN_EXPIRE_MINUTES}
    expose:
      - "8000"

  api2:
    build: .
    restart: always
    hostname: api2
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "uv run alembic upgrade head && uv run uvicorn --host 0.0.0.0 --port 8000 api.main:app"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - ALGORITHM=${ALGORITHM}
      - SECRET_KEY=${SECRET_KEY}
      - GOOGLE_BOOKS_API_KEY=${GOOGLE_BOOKS_API_KEY}
      - TOKEN_EXPIRE_MINUTES=${TOKEN_EXPIRE_MINUTES}
    expose:
      - "8000"

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "80:80"

volumes:
  postgres_data: